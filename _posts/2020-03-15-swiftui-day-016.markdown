---
layout: post
title:  "Day 16:  Chapter 14 - Arrays"
date:   2020-03-16 14:30:00 -0500
categories: swiftui
---
## Looping through an array

```swift
let friends = ["Name", "Name2", "Name3", "Name4", "Name5"]

for friend in friends {
    let sparklyFriend = "✨\(friend)✨"
    print("Hey, \(sparklyFriend), please come to my party on Friday!")
}
print("Done, all friends have been invited.")
```

## Mutable and immutable arrays

Arrays created with `let` are immutable. Arrays created with `var` are mutable.

## Examples from Intro 

All of these examples are from the _Intro_ book playground chapter 14

### Create an empty array

```swift
var list = [String]()
```

### Adding items

Here are a few ways to add elements to an array

```swift
list.append("Raspberry")
list.insert("Elderberry", at: 1)
list += ["Apple", "Moldy peach"]

for item in list {
    print (item)
}
```

### Removing items

``` swift
var numbers = [0,1,2,3,4]
let someNumber = numbers.remove(at: 2)
let firstNumber = numbers.removeFirst()
let lastNumber = numbers.removeLast()
numbers.removeAll()
```

### Replacing items

```swift
var flavors = ["Chocolate", "Vanilla", "Strawberry", "Pistachio", "Rocky Road"]
```

### Using the contains method

> The contains method is part of the Foundation framework that you read about in the “Types” playground. If you try using it and get an error saying “Value of type 'String' has no member 'contains',” follow the instructions from that playground to import the framework into your project.

### Passing an array of bools to a function

This is my answer to one of the exercises in the _Intro_ book. 

First you are given three arrays of votes. Below, I will just put in one as an example. Then you are to write a function that calculates the number of true and false values. Because of Swift's typecasting, I found this to be a good exercise and it took me longer than I expected. 

Ugh. My answer looks _so_ simple now that I am finished.

Here is a link to the Swift Functions Documentation. This page is what helped me solve the problem.

There are more array exercises. Those will be in my next post.

```swift
let shouldMascotChangeVotes: [Bool] = [false, false, false, true, false, true, true, true, false, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, true, true, true, true, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, false, true, true, false, true, false, false, true, false, true, true, false, false, true, false, true, true, true, false, true, true, false, false, true, false, true, true, false, false, false, true, false, true, true, false, true, true, true, true, true, true, true, false, true, false, true, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, false, false, false, false, true, true, true, false, true, true, false, false, true, false, false, true, true, true, true, false, true, true, true, true, false, true, true, false, true, false, false, true, true, false, true, false, false, false, true, false, false, false, true, false, true, true, false, true, true, false, true, true, true, false, false, false, true, false, true, false, true, true, true, true, false, true, false, false, true, true, true, true, true, false]

func printResults(forIssue: String, votes votingArray: [Bool]) {
    var yesCount = 0
    var noCount = 0
    
    for vote in votingArray {
        if vote == true {
            yesCount += 1
        } else {
            noCount += 1
        }
    }
    
    print("\(forIssue), \(yesCount) yes and \(noCount) no.")
}

// main program

printResults(forIssue: "Should we change the mascot?", votes: shouldMascotChangeVotes)
```





